--------- beginning of main
06-27 10:51:10.578   747   787 E HfLooper: dst->data[13.000000,24.000000,9693.000000]
06-27 10:51:10.678   747   787 E HfLooper: dst->data[13.000000,28.000000,9695.000000]
06-27 10:51:10.777   747   787 E HfLooper: dst->data[12.000000,24.000000,9695.000000]
06-27 10:51:10.827 12895 12895 W BpBinder: Linking to death on android.gui.ISurfaceComposer but there are no threads (yet?) listening to incoming transactions. See ProcessState::startThreadPool and ProcessState::setThreadPoolMaxThreadCount. Generally you should setup the binder threadpool before other initialization steps.
06-27 10:51:10.828 12895 12895 W ProcessState: Extra binder thread started, but 0 threads requested. Do not use *startThreadPool when zero threads are requested.
06-27 10:51:10.877   747   787 E HfLooper: dst->data[13.000000,31.000000,9697.000000]
06-27 10:51:10.880 12895 12895 I DMABUFHEAPS: Using DMA-BUF heap named: mtk_mm
06-27 10:51:10.880 12895 12895 I DMABUFHEAPS: Using DMA-BUF heap named: mtk_mm-uncached
06-27 10:51:10.880 12895 12895 I DMABUFHEAPS: Using DMA-BUF heap named: mtk_svp_region-aligned
06-27 10:51:10.880 12895 12895 I DMABUFHEAPS: Using DMA-BUF heap named: mtk_prot_region-aligned
06-27 10:51:10.881 12895 12895 I DMABUFHEAPS: Using DMA-BUF heap named: mtk_2d_fr_region
06-27 10:51:10.881 12895 12895 I DMABUFHEAPS: Using DMA-BUF heap named: mtk_wfd_region-aligned
06-27 10:51:10.977   747   787 E HfLooper: dst->data[13.000000,26.000000,9700.000000]
06-27 10:51:11.077   747   787 E HfLooper: dst->data[12.000000,26.000000,9688.000000]
06-27 10:51:11.177   747   787 E HfLooper: dst->data[13.000000,24.000000,9690.000000]
06-27 10:51:11.277   747   787 E HfLooper: dst->data[12.000000,26.000000,9693.000000]
06-27 10:51:11.377   747   787 E HfLooper: dst->data[13.000000,28.000000,9695.000000]
06-27 10:51:11.477   747   787 E HfLooper: dst->data[13.000000,28.000000,9693.000000]
06-27 10:51:11.577   747   787 E HfLooper: dst->data[12.000000,33.000000,9693.000000]
06-27 10:51:11.677   747   787 E HfLooper: dst->data[12.000000,24.000000,9700.000000]
06-27 10:51:11.777   747   787 E HfLooper: dst->data[13.000000,24.000000,9700.000000]
06-27 10:51:11.822  1357  1898 I ActivityManager: Broadcasting: Intent { act=android.intent.action.MEDIA_SCANNER_SCAN_FILE dat=file:///... flg=0x400000 }
--------- beginning of system
06-27 10:51:11.823  1357  1898 I ActivityManager: Enqueued broadcast Intent { act=android.intent.action.MEDIA_SCANNER_SCAN_FILE dat=file:///... flg=0x400000 }: 0
06-27 10:51:11.828  1357  1929 W JobInfo : Job 'com.android.providers.media.module/com.android.providers.media.MediaService#-300' has a deadline with no functional constraints. The deadline won't improve job execution latency. Consider removing the deadline.
06-27 10:51:11.841  1357  1377 I ActivityManager: Broadcast completed: result=0
06-27 10:51:11.846  2301  2516 I MediaProvider: Begin Intent { act=android.intent.action.MEDIA_SCANNER_SCAN_FILE dat=file:///... flg=0x1400010 cmp=com.android.providers.media.module/com.android.providers.media.MediaService }
06-27 10:51:11.858 12895 12895 W RefBase : RefBase: Explicit destruction, weak count = 0 (in 0x7d0217d848). Use sp<> to manage this object.
06-27 10:51:11.876  2301  2307 W FuseDaemon: Reducing the number of considered missed Gc histogram windows from 127 to 100
06-27 10:51:11.877   747   787 E HfLooper: dst->data[13.000000,24.000000,9700.000000]
06-27 10:51:11.881  2301  2516 I MediaProvider: End Intent { act=android.intent.action.MEDIA_SCANNER_SCAN_FILE dat=file:///... flg=0x1400010 cmp=com.android.providers.media.module/com.android.providers.media.MediaService }
06-27 10:51:11.978   747   787 E HfLooper: dst->data[12.000000,28.000000,9700.000000]
06-27 10:51:12.076   747   787 E HfLooper: dst->data[13.000000,24.000000,9702.000000]
06-27 10:51:12.177   747   787 E HfLooper: dst->data[13.000000,19.000000,9702.000000]
